C
C     =======================
      SUBROUTINE SETINDN(IND)
C     =======================
C
C     GENERATE SYMMETRY EQUIVALENT NUCLEAR POSITIONS
C     IND---ON INPUT : SEQUENCE NUMBER OF THE ACTUAL
C                      NUCLEUS
C           ON OUTPUT: SEQUENCE NUMBER OF THE LAST
C                      NUCLEUS GENERATED BY SYMMETRY
C                      OPERATIONS
C
      IMPLICIT REAL*8 (A-H, O-Z)
C
      INCLUDE 'paracom.inc'
#if defined (PARALLEL)
      INCLUDE 'mpidef.inc'
#else
      PARAMETER (mpirnk = 0)
#endif
C
      DIMENSION P(3)
      KND=IND
      ZNUC=CHARGE(IND)
      XNUC = RNUC (IND)
      DO 6 IOP=1,NSYMOP
C
C     ----------------------------------------------------------------
C     P IS THE RESULTING POSITIONVECTOR OF OPERATION 'IOP' ON VECTOR X
C     ----------------------------------------------------------------
C
      IC=XMAT(2,IOP)
#if defined (BIT64)
      SN=REAL( IABS(IC)/IC )
#else
      SN=DBLE( IABS(IC)/IC )
#endif
      P(IABS(IC)-1)=XCORD(IND)*SN
      IC=XMAT(3,IOP)
#if defined (BIT64)
      SN=REAL( IABS(IC)/IC )
#else
      SN=DBLE( IABS(IC)/IC )
#endif
      P(IABS(IC)-1)=YCORD(IND)*SN
      IC=XMAT(4,IOP)
#if defined (BIT64)
      SN=REAL( IABS(IC)/IC )
#else
      SN=DBLE( IABS(IC)/IC )
#endif
      P(IABS(IC)-1)=ZCORD(IND)*SN
C
C     ------------------------------------------------------------------
C     SEE IF POSITION P ALREADY EXISTS IN THE LIST OF EQUIV. NUCLEAR POS
C     ------------------------------------------------------------------
C
      DO 4 I=IND,KND
#if defined (BIT64)
      IF(ABS(P(1)-XCORD(I)).GT.0.001) GOTO 4
      IF(ABS(P(2)-YCORD(I)).GT.0.001) GOTO 4
      IF(ABS(P(3)-ZCORD(I)).GT.0.001) GOTO 4
#else
      IF(DABS(P(1)-XCORD(I)).GT.0.001) GOTO 4
      IF(DABS(P(2)-YCORD(I)).GT.0.001) GOTO 4
      IF(DABS(P(3)-ZCORD(I)).GT.0.001) GOTO 4
#endif
      GOTO 6
    4 CONTINUE
C
C     ---------------------------------------------------------
C     A NEW NUCLEAR CENTER HAS BEEN CREATED, ADD IT TO THE LIST
C     ---------------------------------------------------------
C
      KND=KND+1
      IF (KND.GT.N1) CALL Q2JOB(3,'P.SETINDN_CHARGE','N1 ',KND)
      CHARGE(KND)=ZNUC
      RNUC (KND) = XNUC
      CENTRN(KND)=CENTRN(IND)
      XCORD(KND)=P(1)
      YCORD(KND)=P(2)
      ZCORD(KND)=P(3)
    6 CONTINUE
C
C     ----------------------------------------------------------------
C     SET UP NUCLEAR INDEX ARRAY : NUCOP(I,IOP) IS THE SEQUENCE NUMBER
C     OF THE NUCLEAR-CENTER THAT RESULTS FROM APPLYING OPERATION IOP
C     ON CENTER I
C     ----------------------------------------------------------------
C
      DO 11 I=IND,KND
      DO 10 IOP=1,NSYMOP
      IC=XMAT(2,IOP)
#if defined (BIT64)
      SN=REAL (IABS(IC)/IC)
#else
      SN=DBLE (IABS(IC)/IC)
#endif
      P(IABS(IC)-1)=XCORD(I)*SN
      IC=XMAT(3,IOP)
#if defined (BIT64)
      SN=REAL (IABS(IC)/IC)
#else
      SN=DBLE (IABS(IC)/IC)
#endif
      P(IABS(IC)-1)=YCORD(I)*SN
      IC=XMAT(4,IOP)
#if defined (BIT64)
      SN=REAL (IABS(IC)/IC)
#else
      SN=DBLE (IABS(IC)/IC)
#endif
      P(IABS(IC)-1)=ZCORD(I)*SN
      DO 9 J=IND,KND
#if defined (BIT64)
      IF (ABS(P(1)-XCORD(J)).GT.0.001) GOTO 9
      IF (ABS(P(2)-YCORD(J)).GT.0.001) GOTO 9
      IF (ABS(P(3)-ZCORD(J)).GT.0.001) GOTO 9
#else
      IF (DABS(P(1)-XCORD(J)).GT.0.001) GOTO 9
      IF (DABS(P(2)-YCORD(J)).GT.0.001) GOTO 9
      IF (DABS(P(3)-ZCORD(J)).GT.0.001) GOTO 9
#endif 
      NUCOP(I,IOP)=J
      GOTO 10
    9 CONTINUE
      if (mpirnk.eq.0)
     &WRITE (*,'(A,I3,A,I3)') 'NO OPERATION TURNS ATOM ',I,' INTO ',J
      CALL Q2JOB(6,'ERROR IN P.SETINDA_NUCOP(I,IOP)',' ',0)
   10 CONTINUE
   11 CONTINUE
C
C     ---------------------------------------------------
C     UPDATE SEQUENCE NUMBER OF NEW ACTUAL CENTER ON EXIT
C     ---------------------------------------------------
C
      IND=KND
      RETURN
      END
