C
C     ==================
      SUBROUTINE MFDDRIV(DAA,DOAA,FAA,FOAA,SC1,SC2,SC3,DOAC,FOAC)
C     ==================
      IMPLICIT REAL*8 (A-H, O-Z)
C
      INCLUDE 'paracom.inc'
      INCLUDE 'general.inc'
      INCLUDE 'memory.inc'
      INCLUDE 'diis.inc'
C
      REAL*8 DAA(*), DOAA(*), FAA(*), FOAA(*), DOAC(*), FOAC(*)
      COMPLEX*16 SC1(*), SC2(*), SC3(*)
C
      CALL CPUUSED(SEC1)
      CALL MFDPOEF(FAA(IP1),FAA(IP2),FAA(IP3),FAA(IP4),FAA(IP5),
     +             FAA(IP6),FAA(IP7),FAA(IP8),FAA(IP9),FAA(IP10),
     +             FAA(IP11),DAA(1),DAA(LENGTH+1))
      CALL CPUUSED(SEC2)
      TPOEF = TPOEF + SEC2 - SEC1 
C
C === RUN THE SCF CALCULATIONS
C
C === FIRST SET THE MAXIMUM NUMBER OF CLASSICAL SCF CYCLES
C === THEN SET THE CONVERGENCE THRESHOLD FOR THE CLASSICAL SCF
C
      ACONV = 0D0
      CCYCLS=NCYCLS
      CONVTH = CONVCRT
C
C === RUN THE ROOTHAAN SCF PROCEDURE
C
      IPTR1 = 1
      IPTR2 = IPTR1 + LENGTH
      IPTR3 = IPTR2 + LENGTH
      IPTR4 = IPTR3 + LENGTH
      CALL CRSCF(DAA(IPTR1),DAA(IPTR2),DAA(IPTR3),DAA(IPTR4),
     +           DOAA(IPTR1),DOAA(IPTR2),DOAA(IPTR3),DOAA(IPTR4),
     +           DOAC(IPTR1),DOAC(IPTR2),DOAC(IPTR3),DOAC(IPTR4),
     +           FAA(IPTR1),FAA(IPTR2),FAA(IPTR3),FAA(IPTR4),
     +           FOAA(IPTR1),FOAA(IPTR2),FOAA(IPTR3),FOAA(IPTR4),
     +           FOAC(IPTR1),FOAC(IPTR2),FOAC(IPTR3),FOAC(IPTR4),
     +           SC1,SC2,SC3)
C
C === WARN THE USER IF THE CALCULATION HAS NOT YET CONVERGED
C
      IF (LASTRUN .AND. (PRCONV .LT. ACONV))
     +  WRITE(6,*) ' ** WARNING ** WAVEFUNCTION MAY NOT BE STABLE **'
      IF (ACONV .GT. CONVCRT) 
     +  WRITE(6,*) ' ** WARNING ** CALCULATION NOT CONVERGED **'
      RETURN
      END
