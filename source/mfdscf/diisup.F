C
      SUBROUTINE DIISUP(DCR,DCI,DOR,DOI,DOCR,DOCI,SCRR1,SCRI1,
     +                  SCRR2,SCRI2,SCRR3,SCRI3,DERR)
      IMPLICIT REAL*8 (A-H, O-Z)
C
C === THIS ROUTINE ADDS A NEW COLLUMN TO THE B (<EI|EJ>) MATRIX
C === AND REMOVES THE OLDEST COLLUMN IF NECCESARY
C
      INCLUDE 'paracom.inc'
      INCLUDE 'general.inc'
      INCLUDE 'diis.inc'
C
      REAL*8 DCR(*), DCI(*), DOR(*), DOI(*)
      REAL*8 SCRR1(*), SCRI1(*), SCRR2(*), SCRI2(*)
      REAL*8 SCRR3(*), SCRI3(*) , DOCR(*), DOCI(*)
C
C === IF WE ALREADY HAVE N30 COLLUMNS REMOVE THE FIRST (OLDEST) ONE
C
      IL = ILAST - IFIRST + 1
      IF (IL .GT. N30) THEN
      IFIRST = IFIRST + 1
      DO 100 I = 1, N30 - 1
      DO 110 J = 1, N30 - 1
      DIMAT(J,I) = DIMAT(J+1,I+1)
  110 CONTINUE
  100 CONTINUE
      ENDIF
C
C === COMPUTE THE NEW ROW AND COLUMN OF B
C
C === THE NEWEST ERROR VECTOR IS STILL IN SCR*
C
C === NOW READ IN THE PREVIOUS ERROR VECTORS AND COMPUTE
C === THE DOT PRODUCT BETWEEN THE OLD ANND THE NEW VECTORS
C
      ICYC = IDCYC + 1
      IF (ICYC .GT. N30) ICYC = 1
      DO 200 I = ILAST - IFIRST + 1, 1, -1
      ICYC = ICYC - 1
      IF (ICYC .LE. 0) ICYC = N30
      IC = 1
      IO = 1
      IO2= 1
      DO 210 IRP = 1, NSYMRP
      NLR = NBLR(IRP)
      NSR = NBSR(IRP)
      NTR = NLR + NSR
      NTRS = NTR * (NTR + 1) / 2
      IF (NCL(IRP) .NE. 0) THEN
      CALL RDIIS(ICYC,DCR(IC),DCI(IC),NTRS,IRP,3)
      IC = IC + NTRS
      ENDIF
      IF (NOP(IRP,1) .NE. 0) THEN
      CALL RDIIS(ICYC,DOR(IO),DOI(IO),NTRS,IRP,4)
      IO = IO + NTRS
      ENDIF
      IF (NOP(IRP,2) .NE. 0) THEN
      CALL RDIIS(ICYC,DOCR(IO2),DOCI(IO2),NTRS,IRP,8)
      IO2 = IO2 + NTRS
      ENDIF
  210 CONTINUE
      IC = IC - 1
      IO = IO - 1
      IO2= IO2 -1
      A = XDOT(DCR,SCRR1,IC)
      IF (OPENSH) A = A + XDOT(DOR,SCRR2,IO)
      IF (OPENSH.AND.NOPEN.GT.1) A = A + XDOT(DOCR,SCRR3,IO2)
      B = XDOT(DCI,SCRI1,IC)
      IF (OPENSH) B = B + XDOT(DOI,SCRI2,IO)
      IF (OPENSH.AND.NOPEN.GT.1) B = B + XDOT(DOCI,SCRI3,IO2)
      DIMAT(I,ILAST - IFIRST + 1) = A + B
      DIMAT(ILAST - IFIRST + 1,I) = A + B
  200 CONTINUE
C
C === WRITE DIMAT TO DIISFIL
C
      L = N30 * N30
      CALL WDIIS(IDCYC,DIMAT,DIMAT,L,0,5)
C
C === COMPUTE THE DIIS ERROR
C
      L = ILAST - IFIRST + 1
      DERR = DIMAT(L,L)
#if defined (BIT64)
      DERR = SQRT(DERR)
#else
      DERR = DSQRT(DERR)
#endif
C
C === SCALE THE DIIS MATRIX AND MULTIPLY THE DIAGONALE ELEMENTS WITH
C === 1.02 TO STABILIZE THE PROCESS
C
      CALL SCALEDM
C
      RETURN
      END
