C
C     ==================
      SUBROUTINE MFD4INP
C     ==================
      IMPLICIT REAL*8 (A-H, O-Z)
C
C     READ INPUT DATA
C
      INCLUDE 'paracom.inc'
      INCLUDE 'general.inc'
      INCLUDE 'diis.inc'
      INCLUDE 'ossel.inc'
#if defined (PARALLEL)
      INCLUDE 'mpidef.inc'
#else
      PARAMETER (mpirnk=0)
#endif
C
      DIMENSION NEQ(2),INDNRP(16),OPTOT(2),NOPTOT(2)
      INTEGER IUNITS(6)
      CHARACTER*8 TIMEX, FILE1*12
      INTEGER TOTAL
      EQUIVALENCE (IUNITS(1),SRTTWLL)
      EQUIVALENCE (NEQ,NQ1),(INDVEC,INDNRP)
C
      NAMELIST/TITLE/SCFTXT
      NAMELIST/PRFLAG/PRTOD,PRTRD,PRTEW,PRTVC,PRTDM ,PRDINF
      NAMELIST/XTRPOL/NSLOTI,XORTHO,
     +                NDAMP,NPOPLE,NDIIS,CODIIS,DAMPFX
      NAMELIST/SCF/NCYCLS,CONVCRT,CLIGHT,ONLYONE,ONLYBRT,SELECT,
     +             BREIT,SFRAC,DEGEN,MFIL,RSKINB
      NAMELIST/OCCUP/TOTAL,NOPEN
      NAMELIST/GENERAL/TWOC
      NAMELIST/OSSEL/NOORTHO,DEBUG,OSVIRT,SMALL,HARDSEL
      NAMELIST/ORTHO/THRESH
C
C     -------------------------------------------------------
C     READ TABLES AND ONE-ELECTRON INTEGRALS AS CALCULATED BY
C     PROGRAM "RELONEL"
C     -------------------------------------------------------
C
      IF (mpirnk .EQ. 0) THEN
         WRITE (FILE1,'(A7)') FNAM(3)   
      ELSEIF (mpirnk .LT. 10) THEN
         WRITE (FILE1,'(A7,A1,I1)') FNAM(3),'.',mpirnk   
      ELSEIF (mpirnk .LT. 100) THEN
         WRITE (FILE1,'(A7,A1,I2)') FNAM(3),'.',mpirnk   
      ELSE
         WRITE (FILE1,'(A7,A1,I3)') FNAM(3),'.',mpirnk   
      ENDIF
      OPEN(MFDONE,STATUS='OLD',FORM='UNFORMATTED',
     +            FILE=FILE1,ERR=20000)
      REWIND MFDONE
      READ (MFDONE) T0,D0,VERS0,TEXT,T1,D1,VERS1
      READ (MFDONE) NQ1,NEQUIV,IDUM,NEQCOM,IDUM,NCOMB,NSYMOP,IDUM,
     $              NSYMF,
     $              NCOEF,ISYMRP,IDUM,IDUM,IDUM,IDUM,IDUM,POTNUC
      IF (NEQUIV.GT.N14) CALL Q2JOB(3,'MFD4INP','N14',NEQUIV)
      READ (MFDONE)
      READ (MFDONE)
      READ (MFDONE) (KCOMB(I),IDUM,INDSYM(I),I=1,NEQUIV)
      READ (MFDONE)
      READ (MFDONE) (IDUM,I=1,NCOMB*(NSYMOP+2)),(INDCOM(I),I=1,NEQCOM)
      READ (MFDONE) (INDORB(I),INDB(I),KSYMRP(I),LSYMRP(I),KSYMF(I),
     $              I=1,NSYMF)
      READ (MFDONE)
      READ (MFDONE) (NBSYM(I),NBSYM1(I),NBSYM2(I),I=1,ISYMRP)
      READ (MFDONE) LCHAIN,(REPN(I),I=1,ISYMRP)
      INDCOM(NEQCOM+1)=NCOMB
      INDORB(NSYMF+1)=NCOEF
      INDSYM(NEQUIV+1)=NSYMF
C
      ITEST = 0
      IF (mpirnk.EQ.0) WRITE(*,1020) VERSION,TEXT
C
      OPEN (5, FILE='MOLFDIR.INP', FORM='FORMATTED')
C
      SCFTXT='NO TITLE SPECIFIED ON SCF - INPUT'
      CALL LOCATE('TITLE',5,ITEST)
      IF (ITEST.GT.0) READ(5,TITLE,ERR=10010)
C
      PRTOD=.FALSE.
      PRTRD=.FALSE.
      PRTDM=.FALSE.
      PRTEW=.FALSE.
      PRTVC=.FALSE.
      PRDINF = .FALSE.
      CALL LOCATE('PRFLAG',6,ITEST)
      IF (ITEST.GT.0) READ(5,PRFLAG,ERR=10011)
C
      NSLOTI=0
      XORTHO=.TRUE.
      NDAMP = 2 ** 30
      NPOPLE = 2 ** 30
      NDIIS = 2 ** 30
      CODIIS = 0.D0
      DAMPFX = 0.35
      CALL LOCATE('XTRPOL',6,ITEST)
      IF (ITEST.GT.0) READ(5,XTRPOL,ERR=10012)
C
      IPOL = 1
      NEXTRP = 2**30
      IF (NDAMP.LT.NEXTRP) THEN
         IPOL=2
         NEXTRP = NDAMP
      ENDIF
      IF (NDIIS.LT.NEXTRP) THEN
         IPOL=3
         NEXTRP = NDIIS
      ENDIF
      IF (NPOPLE.LT.NEXTRP) THEN
         IPOL=5
         NEXTRP = NPOPLE
      ENDIF
      IF (CODIIS.NE.0.D0) IPOL = 3
      MFIL=3
      NCYCLS=IDEF2
      CONVCRT=DEF2
      CLIGHT=0.0D0
      ONLYONE=.FALSE.
      ONLYBRT=.FALSE.
      SELECT=.FALSE.
      BREIT=.FALSE.
      SFRAC=0.0D0
      DEGEN=1.0D-8
      RSKINB = .FALSE.
      CALL LOCATE('SCF',3,ITEST)
      IF (ITEST.GT.0) READ(5,SCF,ERR=10013)
      IF (MFIL.GT.3) MFIL=3
      IF (ONLYBRT) MFIL=0
      TWOC=.FALSE.
      CALL LOCATE('GENERAL',7,ITEST)
      IF (ITEST.GT.0) READ(5,GENERAL,ERR=10014)
      IF (TWOC) MFIL=1
C
      IF (CLIGHT .GT. C) THEN
      C = CLIGHT
      ONOC1 = 0.D0
      ONOC2 = 0.D0
      ELSE IF (CLIGHT .NE. 0.0D0) THEN
      C = CLIGHT
      ONOC1 = 1.0 / C
      ONOC2 = 1.0 / (C * C)
      ELSE
      ONOC1 = 1.0 / C
      ONOC2 = 1.0 / (C * C)
      ENDIF
C
      THRESH=1.0D-12
      CALL LOCATE('ORTHO',5,ITEST)
      IF (ITEST.GT.0) READ(5,ORTHO)

      TWOCSQ=2.0*C*C
C
      PRINT=PRTOD.OR.PRTRD.OR.PRTDM.OR.PRTEW.OR.PRTVC
C
      DO 5038 I = 1, 16
	 DO 5038 J = 1, NTRO
	    IVVAL(J,I) = J
 5038 CONTINUE
C
      CALL DAYTIME(DATUM,TIMEX)
      IF (mpirnk.EQ.0) WRITE (6,1030) SCFTXT,D0,T0,VERS0,
     $                      D1,T1,VERS1,
     $                      D2,T2,VERS2,
     $                      DATUM,TIMEX
      IF (mpirnk.EQ.0) WRITE (6,1040)
     $     EXTRPOL(IPOL),NEXTRP,SELECT,
     $     NCYCLS,C,CONVCRT,THRESH,TWOC,RSKINB,NSLOTI,MFIL,BREIT
      FORMAT='(6F22.16)'
      IF (mpirnk.EQ.0) WRITE(6,1005)
      NSYMRP = 0
      NOCCT = 0
      OPENSH = .FALSE.
C
      NOPEN=0
      TOTAL=0
      DO 6 IRP=1,ISYMRP
         NOP(IRP,1)=0
  	 NOP(IRP,2)=0
	 OCOPN(IRP,1)=0.0D0
	 OCOPN(IRP,2)=0.0D0
   6  CONTINUE
      CALL LOCATE('OCCUP',5,ITEST)
      IF (ITEST.GT.0) THEN 
         READ(5,OCCUP,ERR=10016)
      ELSE
         GOTO 10000
      ENDIF
      IF (NOPEN.GT.2) CALL Q2JOB(6,'TO MANY OPEN SHELLS',' ',0)
C
      READ (5,1090,END=10020) (NCL(IRP),IRP=1,ISYMRP)
      DO 9 I=1 , NOPEN
         READ (5,1090,END=10020) (NOP(IRP,I),IRP=1,ISYMRP)
         READ (5,1110,END=10020) OCCOP
	 DO 7 IRP=1 , ISYMRP
	    IF (NOP(IRP,I).GT.0) THEN
	       OCOPN(IRP,I)=OCCOP
            ELSE
	       OCOPN(IRP,I)=0.0D0
            ENDIF
   7     CONTINUE
   9  CONTINUE
C
      IF (NOPEN.GT.0) OPENSH = .TRUE.
      DO 10 IRP = 1, ISYMRP
      IF ((NOP(IRP,1).GT.0).AND.(NOP(IRP,2).GT.0)) CALL Q2JOB
     +   (6,'TWO OPEN SHELLS IN ONE IRREP',' ',0)
      NOCC = NCL (IRP)
      IF (OPENSH) THEN
         DO 8 I=1 , NOPEN
            NOCC = NOCC + NOP (IRP,I)
   8     CONTINUE
      ENDIF
      INDNRP (IRP)=0
      IF ((NBSYM1 (IRP) .GT. 0) .AND.
     +   (((NBSYM2 (IRP) .GT. 0) .AND. (.NOT. TWOC)) .OR.
     +   (TWOC))) THEN
          IF (NOCC.GT.NBSYM1(IRP)) CALL Q2JOB
     +    (2,'TOO MANY OCCUPIED ORBITAL REPR. '//REPN(IRP),' ',0)
          NOC (IRP) = NOCC
          NOCCT = NOCCT + NOCC
          NSYMRP = NSYMRP + 1
          INDSRP (NSYMRP) = IRP
          INDNRP (IRP) = NSYMRP
      ELSE
          NCL (IRP)=0
          NOP (IRP,1)=0
	  NOP (IRP,2)=0
          OCOPN (IRP,1)=0.0D0
	  OCOPN (IRP,2)=0.0D0
      ENDIF
   10 CONTINUE
C
      DO 11 I=1 ,2
	 OPTOT(I)=0.0D0
	 NOPTOT(I)=0
   11    COPCOF(I)=0.0D0
C
      IF (OPENSH) THEN
C
      NCLTOT=0
C
      DO 20 IRP = 1, ISYMRP
        NCLTOT=NCLTOT+NCL(IRP)
	DO 19 I=1,NOPEN
        OPTOT(I) = OPTOT(I) + OCOPN (IRP,I) * NOP  (IRP,I)
        NOPTOT(I) = NOPTOT(I) + NOP (IRP,I)
 19     CONTINUE
 20   CONTINUE
#if defined (BIT64)
      NCLTOT=NCLTOT+ANINT(OPTOT(1)+OPTOT(2))
#else
      NCLTOT=NCLTOT+DNINT(OPTOT(1)+OPTOT(2))
#endif
C
      IF (TOTAL.NE.0) THEN
        IF (NCLTOT.NE.TOTAL) CALL Q2JOB(6,
     &     'INCONSITENT TOTAL NUMBER OF ELECTRONS',' ',1)
      ENDIF
C
      DO 22 I=1,NOPEN
#if defined (BIT64)
      OPTOT(I) = ANINT (OPTOT(I)) / REAL (NOPTOT(I))
#else
      OPTOT(I) = DNINT (OPTOT(I)) / (DBLE (NOPTOT(I)))
#endif
C
      DO 30 IRP = 1, ISYMRP
        IF (NOP (IRP,I) .GT. 0) OCOPN (IRP,I) = OPTOT(I)
 30   CONTINUE
 22   CONTINUE
C
      DO 31 I=1,NOPEN
      IOPTOT = NINT (OPTOT(I) * NOPTOT(I))
      COPTEL = NOPTOT(I) * (IOPTOT - 1)
      COPNOEM = (NOPTOT(I) - 1) * IOPTOT
      COPCOF(I) = COPTEL / COPNOEM
 31   CONTINUE
C
      ENDIF
C
      IF (NOCCT .GT. N28) CALL Q2JOB
     +   (3, 'MFD4INP', 'N28', NOCCT)
C
      SMALL=0.01D0
      NOORTHO=.TRUE.
      DEBUG=.FALSE.
      OSVIRT=.FALSE.
      HARDSEL=.FALSE.
      CALL LOCATE('OSSEL',5,ITEST)
      IF (ITEST.GT.0) THEN
         READ(5,OSSEL,ERR=10015)
      ELSE
         GOTO 5040
      ENDIF
      IF (HARDSEL) THEN
	 DO 5039 I = 1, ISYMRP
	    READ(5,'(20I4)') (IVVAL(J,I),J=1,NOC(I))
            IF (I .GT. NTRO) CALL Q2JOB(3,'P.MFD4INP','NTRO',I)
 5039    CONTINUE
      ENDIF
 5040 CONTINUE
C
      IF (mpirnk.EQ.0) THEN
      WRITE(*,1010) ' ORBITAL CONFIGURATION TABLE '
      WRITE(*,1005)
      WRITE(*,1050) 'MAIN GROUP IDENTIFIER',(REPN(I)( 1: 4),I=1,ISYMRP)
      IF (LCHAIN.GT.1)
     $WRITE(*,1050) 'SUBGROUP   IDENTIFIER',(REPN(I)( 6: 9),I=1,ISYMRP)
      IF (LCHAIN.GT.2)
     $WRITE(*,1050) '2ND SUBGRP IDENTIFIER',(REPN(I)(11:14),I=1,ISYMRP)
      WRITE(*,1060) 'LARGE COMPONENT BASIS',  (NBSYM1 (I),I=1,ISYMRP)
      WRITE(*,1060) 'SMALL COMPONENT',        (NBSYM2 (I),I=1,ISYMRP)
      WRITE(*,1060) 'NUMBER OF CLOSED SHELLS',(NCL    (I),I=1,ISYMRP)
      WRITE(*,1060) 'NUMBER OF OPEN SHELL  1',(NOP  (I,1),I=1,ISYMRP)
      WRITE(*,1070) 'OCCUPATION OPEN SHELL 1',(OCOPN(I,1),I=1,ISYMRP)
      WRITE(*,1060) 'NUMBER OF OPEN SHELL  2',(NOP  (I,2),I=1,ISYMRP)
      WRITE(*,1070) 'OCCUPATION OPEN SHELL 2',(OCOPN(I,2),I=1,ISYMRP)
      DO 32 I=1,NOPEN
 32   WRITE (*,1080) 'COUPLING CONSTANT ',I,' :', COPCOF(I)
      ENDIF
C
      IF (NSYMRP.EQ.0 .AND. .NOT.ONLYONE) CALL Q2JOB
     $(2,'NO OCCUPIED ORBITALS',' ',0)
C
      CLOSE(5)
C
      RETURN
 1005 FORMAT(//)
 1010 FORMAT(A)
 1020 FORMAT('1R E L A T I V I S T I C    M O L E C U L A R    S C F',
     $       '    P R O G R A M'/33X,'V E R S I O N  ',A////1X,A)
 1030 FORMAT(1X,A//' INITIAL RUN ',      T20,2A12,' V : ',A10/
     $             ' INTEGRAL RUN 1 EL.',T20,2A12,' V : ',A10/
     $             ' INTEGRAL RUN 2 EL.',T20,2A12,' V : ',A10/
     $             ' TODAY IS',          T20,2A12)
 1040 FORMAT(//
     $      ' EXTRAPOLATION TYPE',T40,A    /
     $      ' STARTS AT ITERATION',T41,I4   /
     $      ' VECTOR SELECTION (T/F)',T45,L1/
     $      ' MAX. ITERATIONS  ' ,T31,I15  /
     $      ' SPEED OF LIGHT'    ,T31,G15.8/
     $      ' VECTOR CONV.CRIT.' ,T31,G15.1/
     $      ' THRESHOLD FOR LIN. DEPENDENCE ',T38,E8.1/
     $      ' TWO COMPONENTS CALC (T/F)',T45,L1/
     $      ' USE RESTRICTED KINETIC BALANCE',T45,L1/
     $      ' ADD TWO-E INTERACTION IN ',T42,I4,' CYCLES'/
     $      ' # OF COULOMB TWO-E FILES USED',T42,I4/
     $      ' BREIT CORRECTION VARIATIONALLY ',T45,L1)
 1050 FORMAT(1X,A,T27,16(1X,A4))
 1060 FORMAT(1X,A,T25,16I5)
 1070 FORMAT(1X,A,T25,16F5.1)
 1080 FORMAT (/1X, A18,I1,A2, T25, F12.8)
 1090 FORMAT (16I4)
 1100 FORMAT (16F4.2)
 1110 FORMAT (F12.8)
10000 CALL Q2JOB(1,'OCCUPATION',' ',0)
10010 CALL Q2JOB(1,'NAMELIST TITLE',' ',0)
10011 CALL Q2JOB(1,'NAMELIST PRFLAG',' ',0)
10012 CALL Q2JOB(1,'NAMELIST XTRPOL',' ',0)
10013 CALL Q2JOB(1,'NAMELIST SCF',' ',0)
10014 CALL Q2JOB(1,'NAMELIST GENERAL',' ',0)
10015 CALL Q2JOB(1,'NAMELIST OSSEL',' ',0)
10016 CALL Q2JOB(1,'NAMELIST OCCUP',' ',0)
10020 CALL Q2JOB(1,'--NUMBER OF CLOSED/OPEN SHELLS, OCCUP.',' ',0)
20000 CALL Q2JOB(2,'FILE MFDONE (UN14) CANNOT BE ACCESSED',' ',0)
      END
